# syntax=docker/dockerfile:1.4

# This is the build stage for caracal. Here we create the binary in a temporary image.
FROM rust AS builder

RUN <<EOF
#!/usr/bin/env ash

set -eu

apk add --no-cache \
    sccache \
    musl-dev \
    protobuf-dev

EOF

ARG RUSTC_WRAPPER="/usr/bin/sccache"
ARG AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ARG SCCACHE_REGION=auto
ARG SCCACHE_BUCKET
ARG SCCACHE_ENDPOINT
ARG SCCACHE_S3_USE_SSL

WORKDIR /build
COPY . /build

RUN cargo build --locked --release

# This is the 2nd stage: a very small image where we copy the binaries."
FROM alpine as caracal

COPY --from=builder /build/target/release/caracal /usr/bin
COPY --from=builder /build/target/release/caracal-daemon /usr/bin
COPY --from=builder /build/target/release/caracal-tui /usr/bin

RUN <<EOF
#!/usr/bin/env ash

set -eu

# check if executables work in this container
/usr/bin/caracal version
/usr/bin/caracal-daemon version
/usr/bin/caracal-tui version

EOF

ENTRYPOINT [ "/usr/bin/caracal-daemon" ]
